###############################################
# DATAFLOW: application (DAG) properties     #
###############################################

dataflow:
  ## DAG Depth
  depth: 3

  ## Scalability
  scalability:
    parallelism: 10 # Total number of executors
    balancing: balanced # [balanced, increasing, decreasing, pyramid]
  
  ## Connection and Dependency
  connection: 
    shape: linear #[linear, diamond, star]
    ## Traffic Balancing
    routing: shuffle # [shuffle, hash, broadcast]

  ## Message Reliability
  reliable: true # Boolean, true to enable "acking-like" mechanism, false otherwise

  ## Processing
  workload:
    processing: 300 # CPU load value (may be implemented by keywoards (low, medium, high... pre-defined functions))
    balancing: balanced # [balanced, increasing, decreasing, pyramid]


###############################################
# DATA_STREAM: input data properties          #
###############################################


# TODO: define if autogenerated or external
datastream:
## Tuple Characteristics
# IMPORTANT: Leave uncommented the section related to the kind of
#             input data that you want to use
# + synthetic: data generated by spout (or equivalent)
# + external: data source connected (kafka, ...)

  synthetic:
    data:
      size: 8 # size of the single data
      values: 100 # different values
      balancing: balanced # [balanced, unbalanced]
    ## Input Ratio
    flow:
      distribution: uniform # [unifrom, burst, saw-tooth, normal, bimodal]
      rate: 1000 # msg/s: max value is 1000 (1 each ms), 0 is without pause between packages
  
  #TODO: check needed configurations, e.g. kafka topics
  # WARNING: this section has nit yet being implemented
  # kafka:
  #   host: 127.0.0.1
  #   port: 1234
  #   topic: test_topic
  #   size: 8 # ??
  #   data_type: text
